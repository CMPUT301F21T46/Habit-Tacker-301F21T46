// Generated by view binder compiler. Do not edit!
package com.example.habit_tracker_301f21t46.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.habit_tracker_301f21t46.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomHabitViewLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addLocationHabitButton;

  @NonNull
  public final Button addPhotoHabitButton;

  @NonNull
  public final Button cancelCommentButton;

  @NonNull
  public final Button cancelLocationButton;

  @NonNull
  public final Button commentOnHabitButton;

  @NonNull
  public final EditText commentOnHabitEditText;

  @NonNull
  public final Button confirmCommentButton;

  @NonNull
  public final LinearLayout confirmCommentButtons;

  @NonNull
  public final Button confirmLocationButton;

  @NonNull
  public final LinearLayout confirmLocationButtons;

  @NonNull
  public final CheckBox habitCompleted;

  @NonNull
  public final TextView habitEventComment;

  @NonNull
  public final TextView habitEventLocation;

  @NonNull
  public final ImageView habitPhoto;

  @NonNull
  public final EditText locationOnHabitEditText;

  @NonNull
  public final TextView textView1;

  private CustomHabitViewLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull Button addLocationHabitButton, @NonNull Button addPhotoHabitButton,
      @NonNull Button cancelCommentButton, @NonNull Button cancelLocationButton,
      @NonNull Button commentOnHabitButton, @NonNull EditText commentOnHabitEditText,
      @NonNull Button confirmCommentButton, @NonNull LinearLayout confirmCommentButtons,
      @NonNull Button confirmLocationButton, @NonNull LinearLayout confirmLocationButtons,
      @NonNull CheckBox habitCompleted, @NonNull TextView habitEventComment,
      @NonNull TextView habitEventLocation, @NonNull ImageView habitPhoto,
      @NonNull EditText locationOnHabitEditText, @NonNull TextView textView1) {
    this.rootView = rootView;
    this.addLocationHabitButton = addLocationHabitButton;
    this.addPhotoHabitButton = addPhotoHabitButton;
    this.cancelCommentButton = cancelCommentButton;
    this.cancelLocationButton = cancelLocationButton;
    this.commentOnHabitButton = commentOnHabitButton;
    this.commentOnHabitEditText = commentOnHabitEditText;
    this.confirmCommentButton = confirmCommentButton;
    this.confirmCommentButtons = confirmCommentButtons;
    this.confirmLocationButton = confirmLocationButton;
    this.confirmLocationButtons = confirmLocationButtons;
    this.habitCompleted = habitCompleted;
    this.habitEventComment = habitEventComment;
    this.habitEventLocation = habitEventLocation;
    this.habitPhoto = habitPhoto;
    this.locationOnHabitEditText = locationOnHabitEditText;
    this.textView1 = textView1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomHabitViewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomHabitViewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_habit_view_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomHabitViewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addLocationHabitButton;
      Button addLocationHabitButton = ViewBindings.findChildViewById(rootView, id);
      if (addLocationHabitButton == null) {
        break missingId;
      }

      id = R.id.addPhotoHabitButton;
      Button addPhotoHabitButton = ViewBindings.findChildViewById(rootView, id);
      if (addPhotoHabitButton == null) {
        break missingId;
      }

      id = R.id.cancelCommentButton;
      Button cancelCommentButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelCommentButton == null) {
        break missingId;
      }

      id = R.id.cancelLocationButton;
      Button cancelLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelLocationButton == null) {
        break missingId;
      }

      id = R.id.commentOnHabitButton;
      Button commentOnHabitButton = ViewBindings.findChildViewById(rootView, id);
      if (commentOnHabitButton == null) {
        break missingId;
      }

      id = R.id.commentOnHabitEditText;
      EditText commentOnHabitEditText = ViewBindings.findChildViewById(rootView, id);
      if (commentOnHabitEditText == null) {
        break missingId;
      }

      id = R.id.confirmCommentButton;
      Button confirmCommentButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmCommentButton == null) {
        break missingId;
      }

      id = R.id.confirmCommentButtons;
      LinearLayout confirmCommentButtons = ViewBindings.findChildViewById(rootView, id);
      if (confirmCommentButtons == null) {
        break missingId;
      }

      id = R.id.confirmLocationButton;
      Button confirmLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmLocationButton == null) {
        break missingId;
      }

      id = R.id.confirmLocationButtons;
      LinearLayout confirmLocationButtons = ViewBindings.findChildViewById(rootView, id);
      if (confirmLocationButtons == null) {
        break missingId;
      }

      id = R.id.habitCompleted;
      CheckBox habitCompleted = ViewBindings.findChildViewById(rootView, id);
      if (habitCompleted == null) {
        break missingId;
      }

      id = R.id.habitEventComment;
      TextView habitEventComment = ViewBindings.findChildViewById(rootView, id);
      if (habitEventComment == null) {
        break missingId;
      }

      id = R.id.habitEventLocation;
      TextView habitEventLocation = ViewBindings.findChildViewById(rootView, id);
      if (habitEventLocation == null) {
        break missingId;
      }

      id = R.id.habitPhoto;
      ImageView habitPhoto = ViewBindings.findChildViewById(rootView, id);
      if (habitPhoto == null) {
        break missingId;
      }

      id = R.id.locationOnHabitEditText;
      EditText locationOnHabitEditText = ViewBindings.findChildViewById(rootView, id);
      if (locationOnHabitEditText == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      return new CustomHabitViewLayoutBinding((LinearLayout) rootView, addLocationHabitButton,
          addPhotoHabitButton, cancelCommentButton, cancelLocationButton, commentOnHabitButton,
          commentOnHabitEditText, confirmCommentButton, confirmCommentButtons,
          confirmLocationButton, confirmLocationButtons, habitCompleted, habitEventComment,
          habitEventLocation, habitPhoto, locationOnHabitEditText, textView1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
